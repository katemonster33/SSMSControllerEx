Index: .idea/libraries/starfarer_api.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\n  <library name=\"starfarer.api\">\n    <CLASSES>\n      <root url=\"jar://$PROJECT_DIR$/../starsector/starfarer.api.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/json.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/unlock.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/fs.common_obf.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/jogg-0.0.7.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/commons-compiler.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/jinput.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/log4j-1.2.9.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/jorbis-0.0.15.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/commons-compiler-jdk.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/lwjgl_util.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/jaxb-api-2.4.0-b180830.0359.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/xstream-1.4.10.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/lwjgl.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/janino.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/fs.sound_obf.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/txw2-3.0.2.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/starfarer_obf.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/webp-imageio-0.1.6.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LunaLib/jars/LunaLib-Kotlin.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LunaLib/jars/LunaLib.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/internal/Kotlin-Runtime.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/internal/LazyLib-Console.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib-Kotlin.jar!/\" />\n    </CLASSES>\n    <JAVADOC>\n      <root url=\"https://fractalsoftworks.com/starfarer.api/\" />\n    </JAVADOC>\n    <SOURCES>\n      <root url=\"jar://$PROJECT_DIR$/../starsector/starfarer.api.zip!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/jaxb-api-2.4.0-b180830.0359-sources.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib.jar!/\" />\n      <root url=\"jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib-Kotlin.jar!/\" />\n    </SOURCES>\n  </library>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/starfarer_api.xml b/.idea/libraries/starfarer_api.xml
--- a/.idea/libraries/starfarer_api.xml	(revision 3921fea6332f2a28a168efba06ec2c01aa8c4ec1)
+++ b/.idea/libraries/starfarer_api.xml	(date 1743642938086)
@@ -26,6 +26,7 @@
       <root url="jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib.jar!/" />
       <root url="jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/internal/LazyLib-Console.jar!/" />
       <root url="jar://$PROJECT_DIR$/../starsector/mods/LazyLib/jars/LazyLib-Kotlin.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../starsector/mods/SSMSQoL-1.6/jars/SSMSQoL.jar!/" />
     </CLASSES>
     <JAVADOC>
       <root url="https://fractalsoftworks.com/starfarer.api/" />
Index: src/ssms/controller/EveryFrameCombatPlugin_Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * Copyright (C) 2020 Malte Schulze.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library;  If not, see \n * <https://www.gnu.org/licenses/>.\n */\npackage ssms.controller;\n\nimport com.fs.starfarer.api.Global;\n//import com.fs.starfarer.api.Global;\nimport com.fs.starfarer.api.combat.BaseEveryFrameCombatPlugin;\nimport com.fs.starfarer.api.combat.CombatEngineAPI;\nimport com.fs.starfarer.api.combat.ShipAPI;\nimport com.fs.starfarer.api.combat.ViewportAPI;\nimport com.fs.starfarer.api.input.InputEventAPI;\nimport com.fs.starfarer.combat.CombatState;\nimport com.fs.state.AppDriver;\n\nimport lunalib.backend.ui.components.base.LunaUIButton;\nimport lunalib.lunaUI.LunaUIUtils;\n\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\nimport java.lang.reflect.Array;\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.log4j.Level;\n\nimport java.awt.*;\n//import org.apache.log4j.Level;\n\n/**\n * Handles all controls for combat via game controller.\n * \n * @author Malte Schulze\n */\npublic class EveryFrameCombatPlugin_Controller extends BaseEveryFrameCombatPlugin {\n    protected CombatEngineAPI engine;\n    protected float nextLog;\n    public static Robot T1000 = null;\n    protected boolean wasShowingWarroom = false, skipFrame = true;\n\n    public EveryFrameCombatPlugin_Controller() {\n        //Global.getLogger(SSMSControllerModPlugin.class).log(Level.ERROR, \"created every frame\");\n    }\n    \n    @Override\n    public void init(CombatEngineAPI engine) {\n        //Global.getLogger(SSMSControllerModPlugin.class).log(Level.ERROR, \"initialized every frame\");\n        this.engine = engine;\n        nextLog = 0;\n        skipFrame = true;\n        try {\n            T1000 = new Robot();\n        } catch(AWTException awte) {\n            Global.getLogger(getClass()).log(Level.ERROR, \"Failed to initialize the robot, mod cannot function!\");\n        }\n        if ( engine != null && engine.getContext() != null && (engine.isSimulation() || engine.getCombatUI() != null)\n                && SSMSControllerModPluginEx.controller != null && SSMSControllerModPluginEx.controller.mapping != null ) {\n            \n        }\n    }\n    \n    protected ShipAPI getControlledShip() {\n        return engine.getPlayerShip();\n    }\n    \n    protected boolean isControllerConfigured(HandlerController handler) {\n        return handler != null && handler.mapping != null;\n    }\n\n    @Override\n    public void processInputPreCoreControls(float amount, List<InputEventAPI> events) {\n        \n    }\n    // UIPanelAPI getScreenPanel()\n    // {\n    //     TitleScreenState titlescreen  = (TitleScreenState)AppDriver.getInstance().getCurrentState();\n\n    //     var methodClass = Class.forName(\"java.lang.reflect.Method\", false, ClassLoader.getSystemClassLoader());\n    //     var getNameMethod = MethodHandles.lookup().findVirtual(methodClass, \"getName\", MethodType.methodType(String.class));\n    //     var invokeMethod = MethodHandles.lookup().findVirtual(methodClass, \"invoke\", MethodType.methodType(Object.class, Object.class, Object[].class));\n        \n    //     Method foundMethod = null;\n    //     var methods = titlescreen.getClass().getMethods();\n    //     for(int index = 0; index < methods.length; index++)\n    //     {\n    //         if (getNameMethod.invoke(methods[index]) == \"getScreenPanel\")\n    //         {\n    //             foundMethod = methods[index];\n    //         }\n    //     }\n\n    //     return (UIPanelAPI)invokeMethod.invoke(foundMethod, titlescreen);\n    // }\n    \n    @Override\n    public void advance(float amount, List<InputEventAPI> events) {\n        if(SSMSControllerModPluginEx.controller != null) {\n            SSMSControllerModPluginEx.controller.poll();\n            switch(Global.getCurrentState())\n            {\n                case TITLE:\n                    if(SSMSControllerModPluginEx.controller.isButtonAPressed()) {\n                        T1000.mouseMove(200, 100);\n                    } else if(SSMSControllerModPluginEx.controller.isButtonBPressed()) {\n                        T1000.mouseMove(250, 80);\n                    } else if(SSMSControllerModPluginEx.controller.isButtonYPressed()) {\n                        T1000.mouseMove(300, 80);\n                    } else if(SSMSControllerModPluginEx.controller.isButtonXPressed()) {\n                        T1000.mouseMove(350, 100);\n                    }\n                    break;\n                case CAMPAIGN:\n                    //Global.getSector().\n                    break;\n                case COMBAT:\n                    break;\n\n            }\n        }\n    }\n\n    @Override\n    public void renderInWorldCoords(ViewportAPI viewport) {\n    }\n    \n    @Override\n    public void renderInUICoords(ViewportAPI viewport) {\n        if ( skipFrame ) {\n            /*Global.getLogger(SSMSControllerModPlugin.class).log(Level.ERROR, \n                \"renderInUICoords\");*/\n            return;\n        }\n        super.renderInUICoords(viewport);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ssms/controller/EveryFrameCombatPlugin_Controller.java b/src/ssms/controller/EveryFrameCombatPlugin_Controller.java
--- a/src/ssms/controller/EveryFrameCombatPlugin_Controller.java	(revision 3921fea6332f2a28a168efba06ec2c01aa8c4ec1)
+++ b/src/ssms/controller/EveryFrameCombatPlugin_Controller.java	(date 1743547778575)
@@ -114,6 +114,7 @@
             switch(Global.getCurrentState())
             {
                 case TITLE:
+                    Global.getSector().getCampaignUI().cmdLoad();
                     if(SSMSControllerModPluginEx.controller.isButtonAPressed()) {
                         T1000.mouseMove(200, 100);
                     } else if(SSMSControllerModPluginEx.controller.isButtonBPressed()) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ArtifactsWorkspaceSettings\">\n    <artifacts-to-build>\n      <artifact name=\"SSMSController\" />\n    </artifacts-to-build>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f93bfbfa-f590-465e-a84d-27f995dd3431\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/SSMSController.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.vscode/launch.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.vscode/launch.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/data/config/settings.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/config/settings.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/jars/SSMSController.jar\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ssms/controller/ControllerMapping.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ssms/controller/ControllerMapping.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ssms/controller/EveryFrameCombatPlugin_Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ssms/controller/EveryFrameCombatPlugin_Controller.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ssms/controller/SSMSControllerModPlugin.java\" beforeDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2v5g6PFtiC3sPgPpem4DsUcQ7Zl\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"Application.Run Starsector.executor\": \"Debug\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/home/katie/starsector/mods/LazyLib/jars/LazyLib-Kotlin.jar\",\n    \"project.structure.last.edited\": \"Artifacts\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.20665084\",\n    \"settings.editor.selected.configurable\": \"project.propCompiler\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/jars\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Run Starsector\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"$PROJECT_DIR$/../starsector/jre_linux\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.fs.starfarer.StarfarerLauncher\" />\n      <module name=\"SSMSController\" />\n      <option name=\"VM_PARAMETERS\" value=\"-Dfile.encoding=UTF-8 -noverify -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -XX:+ShowCodeDetailsInExceptionMessages -XX:+ExtensiveErrorReports -XX:+ShowMessageBoxOnError -XX:+PrintCommandLineFlags -XX:+TieredCompilation -XX:-UseCondCardMark -Xlog:async -XX:+UseFastStosb -XX:+AlwaysCompileLoopMethods -XX:TieredStopAtLevel=4 -XX:TrimNativeHeapInterval=60000 -XX:+UseCriticalCompilerThreadPriority -XX:+UseCriticalJavaThreadPriority -XX:UseAVX=3 -XX:AVX3Threshold=0 -XX:UseSSE=4 -XX:+UseSSE42Intrinsics -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UseFMA -XX:+UseBMI1Instructions -XX:+UseBMI2Instructions -XX:+UseCLMUL -XX:+UseFastUnorderedTimeStamps -XX:+UseUnalignedLoadStores -XX:+UseXMMForArrayCopy -XX:+UseXMMForObjInit -XX:+UseXmmI2D -XX:+UseXmmI2F -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:+ParallelRefProcEnabled -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=compact -XX:ShenandoahAllocationThreshold=85 -XX:ShenandoahGuaranteedGCInterval=0 -XX:+ZeroTLAB -XX:+SegmentedCodeCache -XX:+AlwaysAtomicAccesses -XX:+UseStringDeduplication -XX:-DontCompileHugeMethods -XX:Tier0Delay=1 -XX:+UseFPUForSpilling -XX:+EnableVectorAggressiveReboxing -XX:+EnableVectorReboxing -XX:+EnableVectorSupport -XX:-AlignVector -XX:TieredOldPercentage=10000 -XX:Tier0ProfilingStartPercentage=2000 -XX:IncreaseFirstTierCompileThresholdAt=99 -XX:InterpreterProfilePercentage=99 -XX:+UseVectorCmov -XX:+UseVectorStubs -XX:ReferencesPerThread=0 -XX:MaxGCPauseMillis=10 -XX:-EnableThreadSMRStatistics -XX:+UseUnalignedAccesses -XX:PerMethodRecompilationCutoff=100000 -XX:ProfileMaturityPercentage=100 -XX:NmethodSweepActivity=1 -XX:ThreadPriorityPolicy=1 -XX:ReservedCodeCacheSize=256m -XX:+PrintCodeCache -XX:-UseDynamicNumberOfCompilerThreads -XX:CompilerDirectivesFile=./compiler_directives.txt -Djava.library.path=./native/linux -XX:-BytecodeVerificationLocal -XX:-BytecodeVerificationRemote -Djava.util.Arrays.useLegacyMergeSort=true --enable-preview --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.nio.Buffer.UNSAFE=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.lang.ref=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED --add-opens=java.desktop/java.awt.Rectangle=ALL-UNNAMED --add-opens=java.desktop/java.awt=ALL-UNNAMED --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-exports=java.base/jdk.internal.misc=ALL-UNNAMED --add-exports=java.base/sun.nio.ch=ALL-UNNAMED -Xms2048m -Xmx2048m -Xss4m -Dcom.fs.starfarer.settings.paths.saves=./saves -Dcom.fs.starfarer.settings.paths.screenshots=./screenshots -Dcom.fs.starfarer.settings.paths.mods=./mods -Dcom.fs.starfarer.settings.paths.logs=. -Dcom.fs.starfarer.settings.linux=true \" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/../starsector\" />\n      <method v=\"2\">\n        <option name=\"BuildArtifacts\" enabled=\"true\">\n          <artifact name=\"SSMSController\" />\n        </option>\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_External Tools_Copy\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f93bfbfa-f590-465e-a84d-27f995dd3431\" name=\"Changes\" comment=\"\" />\n      <created>1743440173281</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1743440173281</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/out/production/SSMSController/ssms/controller/SSMSControllerModPluginEx.class</url>\n          <line>32</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/ssms/controller/SSMSControllerModPluginEx.java</url>\n          <line>86</line>\n          <option name=\"timeStamp\" value=\"9\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3921fea6332f2a28a168efba06ec2c01aa8c4ec1)
+++ b/.idea/workspace.xml	(date 1743728135085)
@@ -10,17 +10,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="f93bfbfa-f590-465e-a84d-27f995dd3431" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/SSMSController.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.vscode/launch.json" beforeDir="false" afterPath="$PROJECT_DIR$/.vscode/launch.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/config/settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/data/config/settings.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/jars/SSMSController.jar" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ssms/controller/ControllerMapping.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ssms/controller/ControllerMapping.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/starfarer_api.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/starfarer_api.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/jars/SSMSController.jar" beforeDir="false" afterPath="$PROJECT_DIR$/jars/SSMSController.jar" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/ssms/controller/EveryFrameCombatPlugin_Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ssms/controller/EveryFrameCombatPlugin_Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ssms/controller/SSMSControllerModPlugin.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,22 +34,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Application.Run Starsector.executor": "Debug",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "master",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "/home/katie/starsector/mods/LazyLib/jars/LazyLib-Kotlin.jar",
-    "project.structure.last.edited": "Artifacts",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.20665084",
-    "settings.editor.selected.configurable": "project.propCompiler"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Application.Run Starsector.executor&quot;: &quot;Debug&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/home/katie/starsector/mods/SSMSQoL-1.6/jars/SSMSQoL.jar&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.20665084&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/jars" />
@@ -96,11 +89,6 @@
           <url>file://$PROJECT_DIR$/out/production/SSMSController/ssms/controller/SSMSControllerModPluginEx.class</url>
           <line>32</line>
           <option name="timeStamp" value="1" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/ssms/controller/SSMSControllerModPluginEx.java</url>
-          <line>86</line>
-          <option name="timeStamp" value="9" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
